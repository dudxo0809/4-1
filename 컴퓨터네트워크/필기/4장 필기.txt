p. 3

지난 시간까지 Application Layer를 공부했고

이제 Transport Layer를 공부한다.

	-> transport layer의 원리를 공부한다.
	-> 이 레이어의 인터넷에서의 프로토콜을 공부한다.
		-> UDP, TCP


------------------------------------------------------------------------------------------------
p. 5

양단에 호스트가 있음
	-> 양쪽을 잇는 가상의 파이프
	-> 이것을 만드는게 transport service
		-> app process 간의 논리적 커뮤니케이션

	Transport protocol은 End system에서 동작한다!!!
	-> 보내는쪽에서 메시지를 세그먼트로 나눠 네트워크 레이어로 보냄
	-> 받는쪽이 세그먼트를 재조합해 app 레이어로 보냄!!

	-> 커넥션 없이 보내는게 UDP. 커넥션이 있는게 TCP

------------------------------------------------------------------------------------------------
p. 6

UDP를 사용하는것은 network레이어를 그대로 사용하는것?
	네트워크 레이어는 호스트간의 커넥션없이 로지컬한 소통을 하는것
	UDP는 프로세스간에 커넥션 없이 로지컬한 소통을 하는것
	-> 두개가 비슷하다!


네트워크레이어와 트랜스포트레이어의 차이점!

	-> 네트워크레이어는 신뢰성이 낮다. : 이를 그대로 사용하는게 UDP
		-> 이를 문제가 없게 커넥션을 만드는게 TCP방식


------------------------------------------------------------------------------------------------
p. 7

신뢰성이 있고, 세그먼트의 순서가 뒤바뀌지않는 TCP
		
신뢰성이 없고 순서가 정리되지않는 UDP

이 트랜스포트 레이어의 프로토콜 두개는 딜레이가 보장이 되지 않고, 전송량도 보장이 안된다.

------------------------------------------------------------------------------------------------
p. 8

멀티플렉싱과 디멀티플렉싱

https://snnchallenge.tistory.com/127

	-> 디멀티플렉싱은 여러 데이터를 섞어서 보내는것 (트랜스포트레이어로 와서 섞이는것)
		-> 여러 클라이언트에서 서버의 트랜스포트레이어로 온것을
		-> 알맞게 호스트로 잘 나눠 보냄
	-> 디멀티플렉싱
		-> 데이터가 트랜스포트로 들어와서 섞여존재하게 됨
		-> 

	?? 헷갈림
------------------------------------------------------------------------------------------------
p. 9

디멀티 플렉싱이 어떻게 동작하나

	-> 





------------------------------------------------------------------------------------------------
p. 10

두개의 소켓을 만들고, 포트넘버를 지정함	
UDP 소켓은 IP주소와 포트넘버로 identify된다



소스포트넘버는 return address를 제공한다.


------------------------------------------------------------------------------------------------
p. 12

앱 레이어에 세그먼트를 보낼때 connection oriented 서비스이기때문에
	-> 어떤 커넥션인지를 알아야 하기때문에
	4개의 tuple이 필요하다.





------------------------------------------------------------------------------------------------
p. 13

서로 다른 호스트 에서 들어오는 세그먼트들

세개의 커넥션

TCP는 호스트의 포트넘버도 필요함




------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
p. 







------------------------------------------------------------------------------------------------
