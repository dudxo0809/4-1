p. 2, 3

선형방정식을 어떻게 푸는가?

	-> 선형대수학의 주요 문제임
	-> 벡터로 풀어보자
	-> 챕터2 에서는 벡터로 Linear equation을 푸는 방법론에 대해 배운다.




------------------------------------------------------------------------------------------------------------------------

p. 5

3개의 3차원 방정식을 벡터로 표현

	-> 각 벡터의 스칼라곱을해서 더하면 된다.
	-> 벡터로 표현해서 해를 찾을 수 있다.





------------------------------------------------------------------------------------------------------------------------

p. 7

곧 나올 매트랩 과제

	-> 매트릭스 연산을 위한 프로그램
	-> 나중에 참고하기





------------------------------------------------------------------------------------------------------------------------

p. 8, 9

소거법을 벡터로 표현??

pivot
	-> 첫번째 방정식에서 소거하려는 미지수(x)의 계수

multiplier
	-> 소거를 위해 equation에 곱해지는 상수

소거를 할때 반드시 pivot에 multiplier를 곱한 식을 빼야한다


------------------------------------------------------------------------------------------------------------------------

p. 11

ex.1) pivot은 1, multiplier는 3이다.
	-> 이렇게 하면 두번째 pivot은 0이 됨!! -> 말이안되는 y값이나옴
	-> n개의 equation의 해를 구하려면
		-> n개의 pivot이 모두 0이면 안된다!!

ex.2) 무수히 많은 해가 생김

두 경우 모두 두번째 pivot이 0이되었음
	-> non-zero인 pivot이 한개밖에 없기 때문에 해가 없거나 무수히 많다.
	-> 이를 elimination을 통해 미리 찾아낼 수 있다.

	-> 만약 n이 100개? 200개? 라면??
		-> 100개의 미지수에대해 일일히 방정식을 풀 수 는 없음 ㅜㅜ
		-> 추후 프로그램으로 계산하는 과제가 나올것
			-> non-zero인 pivot이 몇개인지 확인하는...

	-> 애초에 pivot이 0이면 pivot이라고 표현하지 않음!!!

------------------------------------------------------------------------------------------------------------------------

p. 12

singular : n개의 equation에서 pivot이 n개보다 적은것
	-> 완벽하게 풀 수 없음

non-singular : n개의 equation에서 pivot이 n개 나온것
	-> 완벽하게 풀 수 있음


------------------------------------------------------------------------------------------------------------------------

p. 13

첫번째-두번째) pivot은 2, multiplier는 2
첫번째-세번째) pivot은 2, multiplier는 -1







------------------------------------------------------------------------------------------------------------------------

p. 16

한번의 Elimination과정을 matrix로 정의하자

	-> Elimination matrix를 곱해 소거의 과정을 대신한다
	-> 다음 Elimination은? (1번째와 3번째)

	-> 2번째 소거는 3행1열에 multiplier가 붙음



------------------------------------------------------------------------------------------------------------------------

p. 19

Matlab을 이용한 elimination과정
과정 잘 살펴보고 이해할것


------------------------------------------------------------------------------------------------------------------------

p. 21

Row Exchange

	-> 행을 바꾼다?
	-> Permutation matrix는 열을 바꾸는 행렬이다.
	
	-> 계산의 편의성을 위해 row exchange를 한다.
	-> permutation matrix의 곱으로 row  exchange를 진행!

	-> How?
	-> 기본적으로 Identity matrix에서 시작함
	-> Identity matrix에서 바꿀 equation의 row를 바꿔주면
		-> permutation matrix가 된다!!!

------------------------------------------------------------------------------------------------------------------------

p. 22

Augmented Matrix

	-> Ax=b 를 구할때 
	-> 양변에 행렬을 곱한다
	-> 이를 한번만 곱하기 위해 A와 b를 합친다!


------------------------------------------------------------------------------------------------------------------------

p. 24

두 행렬을 곱할때

	A*B
	-> A의 열과 B의 행의 갯수는 반드시 같아야한다. 

------------------------------------------------------------------------------------------------------------------------
p. 26

Block Matrix

	-> 큰 사이즈의 행렬을 나눌 수 있다.


------------------------------------------------------------------------------------------------------------------------
p. 27

행렬의 곱을 Linear combination으로 표현


p. 28

역행렬은 곱해서 단위행렬이 되는 행렬

특징
	1. n개의 피벗이 있어야함
	2. 단 하나의 역행렬만 존재
	3. 역행렬이 있다면, 양변에 역행렬을 곱해 해를 구할 수 있다
	4. x가 0벡터가 아니어야 역행렬이 존재한다
	5. 2x2행렬의 역행렬 공식
	6. 대각선 행렬의 역행렬
